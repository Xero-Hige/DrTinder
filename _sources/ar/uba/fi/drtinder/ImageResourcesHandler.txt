.. java:import:: android.app Activity

.. java:import:: android.content Context

.. java:import:: android.graphics Bitmap

.. java:import:: android.graphics BitmapFactory

.. java:import:: android.os AsyncTask

.. java:import:: android.util Base64

.. java:import:: android.widget ImageView

.. java:import:: com.bumptech.glide Glide

.. java:import:: com.google.common.io ByteStreams

.. java:import:: org.springframework.http.converter StringHttpMessageConverter

.. java:import:: org.springframework.web.client HttpClientErrorException

.. java:import:: org.springframework.web.client HttpServerErrorException

.. java:import:: org.springframework.web.client RestTemplate

.. java:import:: java.io File

.. java:import:: java.io FileInputStream

.. java:import:: java.io FileNotFoundException

.. java:import:: java.io FileOutputStream

.. java:import:: java.io IOException

.. java:import:: java.util HashMap

.. java:import:: java.util Locale

.. java:import:: java.util.concurrent CountDownLatch

ImageResourcesHandler
=====================

.. java:package:: ar.uba.fi.drtinder
   :noindex:

.. java:type:: public final class ImageResourcesHandler

   Resource Handler that manages requests and cache of image resources

Fields
------
RES_INTEREST_IMG
^^^^^^^^^^^^^^^^

.. java:field:: public static final int RES_INTEREST_IMG
   :outertype: ImageResourcesHandler

   TODO

RES_USER_IMG
^^^^^^^^^^^^

.. java:field:: public static final int RES_USER_IMG
   :outertype: ImageResourcesHandler

   TODO

Methods
-------
clearCache
^^^^^^^^^^

.. java:method:: public static void clearCache(Context context)
   :outertype: ImageResourcesHandler

   TODO

   :param context:

fillImageResource
^^^^^^^^^^^^^^^^^

.. java:method:: static void fillImageResource(String imageId, int resourceType, ImageView imgView, Context context)
   :outertype: ImageResourcesHandler

   TODO

   :param imageId:
   :param resourceType:
   :param imgView:
   :param context:

freeCachedResource
^^^^^^^^^^^^^^^^^^

.. java:method:: public static void freeCachedResource(String imageId, int resourceType, Context context)
   :outertype: ImageResourcesHandler

   TODO

   :param imageId:
   :param resourceType:
   :param context:

prefetch
^^^^^^^^

.. java:method:: static void prefetch(String imageId, int resourceType, Context context)
   :outertype: ImageResourcesHandler

   Prefetch resources from server (if needed) in order to improve network resources use.

   :param imageId:: Server id of the fetching resource
   :param resourceType:: Type of the resource (One of listed const types)
   :param context:: Context of the calling activity

